/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package makemathgreatagain;

import javax.swing.JOptionPane;


/**
 *
 * @author Haoda (the great)
 */
public class MakeMathGreatAgain extends javax.swing.JFrame {

    /**
     * Creates new form MakeMathGreatAgain
     */
    public MakeMathGreatAgain() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblSubTitle = new javax.swing.JLabel();
        lblImage = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textOutput = new javax.swing.JTextArea();
        lblCosineLaw = new javax.swing.JLabel();
        textCosineC = new javax.swing.JTextField();
        lblCosineLawEquals = new javax.swing.JLabel();
        textCosineA = new javax.swing.JTextField();
        lblCosineLawEquals1 = new javax.swing.JLabel();
        textCosineB = new javax.swing.JTextField();
        lblCosineLawEquals2 = new javax.swing.JLabel();
        lblCosineLawEquals3 = new javax.swing.JLabel();
        textCosineTheta = new javax.swing.JTextField();
        btnCosineLaw = new javax.swing.JButton();
        lblCosineLaw1 = new javax.swing.JLabel();
        lblCosineLawEquals4 = new javax.swing.JLabel();
        textSineA = new javax.swing.JTextField();
        textSinea = new javax.swing.JTextField();
        lblCosineLawEquals5 = new javax.swing.JLabel();
        lblCosineLawEquals6 = new javax.swing.JLabel();
        textSineB = new javax.swing.JTextField();
        textSineb = new javax.swing.JTextField();
        lblCosineLawEquals7 = new javax.swing.JLabel();
        btnSineLaw1 = new javax.swing.JButton();
        btnHelp = new javax.swing.JButton();
        lblCrossMulti = new javax.swing.JLabel();
        lblComma = new javax.swing.JLabel();
        textVAX = new javax.swing.JTextField();
        lblCosineLawEquals9 = new javax.swing.JLabel();
        textVAY = new javax.swing.JTextField();
        lblComma1 = new javax.swing.JLabel();
        textVAZ = new javax.swing.JTextField();
        lblCosineLawEquals10 = new javax.swing.JLabel();
        textVBX = new javax.swing.JTextField();
        textVBY = new javax.swing.JTextField();
        textVBZ = new javax.swing.JTextField();
        lblComma2 = new javax.swing.JLabel();
        lblComma3 = new javax.swing.JLabel();
        btnCrossVector = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblTitle.setText("MAKE MATH GREAT AGAIN!!");

        lblSubTitle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblSubTitle.setText("Don't you HATE repetitive calculations? Well, we invented machines for a reason.");

        lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/makemathgreatagain/donald-trump-small.png"))); // NOI18N
        lblImage.setOpaque(true);

        textOutput.setColumns(20);
        textOutput.setRows(5);
        textOutput.setText("-- OUTPUT AREA -- ");
        jScrollPane1.setViewportView(textOutput);

        lblCosineLaw.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCosineLaw.setText("Cosine Law: ");

        textCosineC.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        textCosineC.setText("x");

        lblCosineLawEquals.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCosineLawEquals.setText("C = ");

        textCosineA.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        textCosineA.setText("2");

        lblCosineLawEquals1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCosineLawEquals1.setText("A = ");

        textCosineB.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        textCosineB.setText("3");

        lblCosineLawEquals2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCosineLawEquals2.setText("B = ");

        lblCosineLawEquals3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCosineLawEquals3.setText("Ï´ = ");

        textCosineTheta.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        textCosineTheta.setText("125");

        btnCosineLaw.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCosineLaw.setText("Calculate");
        btnCosineLaw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCosineLawActionPerformed(evt);
            }
        });

        lblCosineLaw1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCosineLaw1.setText("Sine Law:");

        lblCosineLawEquals4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCosineLawEquals4.setText("angle A = ");

        textSineA.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        textSineA.setText("125");

        textSinea.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        textSinea.setText("4.46");

        lblCosineLawEquals5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCosineLawEquals5.setText("side a = ");

        lblCosineLawEquals6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCosineLawEquals6.setText("angle B =");

        textSineB.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        textSineB.setText("x");

        textSineb.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        textSineb.setText("2");

        lblCosineLawEquals7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCosineLawEquals7.setText("side b = ");

        btnSineLaw1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSineLaw1.setText("Calculate");
        btnSineLaw1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSineLaw1ActionPerformed(evt);
            }
        });

        btnHelp.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnHelp.setText("HOW TF DO I USE THIS??");
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });

        lblCrossMulti.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCrossMulti.setText("3d Vector Cross Multiplication");

        lblComma.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblComma.setText(",");

        textVAX.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        textVAX.setText("1");

        lblCosineLawEquals9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCosineLawEquals9.setText("Vector A:");

        textVAY.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        textVAY.setText("1");

        lblComma1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblComma1.setText(",");

        textVAZ.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        textVAZ.setText("1");

        lblCosineLawEquals10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCosineLawEquals10.setText("Vector B:");

        textVBX.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        textVBX.setText("1");

        textVBY.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        textVBY.setText("1");

        textVBZ.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        textVBZ.setText("1");

        lblComma2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblComma2.setText(",");

        lblComma3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblComma3.setText(",");

        btnCrossVector.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCrossVector.setText("Calculate");
        btnCrossVector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrossVectorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblSubTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                            .addComponent(lblCosineLawEquals)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(textCosineC, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(lblCosineLaw, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(lblCosineLawEquals1)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(textCosineA, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(lblCosineLawEquals2)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(textCosineB, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(lblCosineLawEquals3)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(textCosineTheta, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(lblCosineLaw1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addComponent(lblCosineLawEquals4)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(textSineA, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addGap(37, 37, 37)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(lblCrossMulti, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGap(7, 7, 7)
                                                                .addComponent(lblCosineLawEquals9)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(textVAX, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(lblComma)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(textVAY, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(lblComma1)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(textVAZ, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(lblCosineLawEquals5)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(textSinea, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addComponent(lblCosineLawEquals6)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(textSineB, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addComponent(lblCosineLawEquals7)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(textSineb, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGap(51, 51, 51)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                    .addGroup(layout.createSequentialGroup()
                                                                        .addComponent(lblCosineLawEquals10)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(textVBX, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(lblComma3)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(textVBY, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(lblComma2)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(textVBZ, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                    .addComponent(btnCrossVector, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGap(36, 36, 36)
                                                                .addComponent(btnHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnCosineLaw)
                                                .addGap(62, 62, 62)
                                                .addComponent(btnSineLaw1)))))
                                .addGap(0, 40, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSubTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCosineLaw, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(textCosineC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCosineLawEquals, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(textCosineA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCosineLawEquals1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(textCosineB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCosineLawEquals2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(textCosineTheta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCosineLawEquals3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSineLaw1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnCosineLaw, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblCosineLaw1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCrossMulti, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(textSineA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCosineLawEquals4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblComma, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textVAX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCosineLawEquals9, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textVAY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblComma1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textVAZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(textSinea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCosineLawEquals5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblComma3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textVBX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCosineLawEquals10, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textVBY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblComma2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textVBZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(textSineB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblCosineLawEquals6, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnCrossVector))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(textSineb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblCosineLawEquals7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private double degToRad(double deg){
        // Formuler: { pi / 180 = radians / degrees }
        // radians = (pi/180)*degrees
        double radians = (Math.PI / 180)*deg ;
        return radians;
    }
    
    private double radToDeg(double rad){
        // Formuler: { 180 / pi = deg / rad }
        // radians = (pi/180)*degrees
        double degrees = (180 / Math.PI)*rad ;
        return degrees;
    }
    
    
    private void btnCosineLawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCosineLawActionPerformed
        // COSINE LAW!!!
        String a, b, c, theta;
        double numA, numB, numC, angleTheta;
        
        a = textCosineA.getText();
        b = textCosineB.getText();
        c = textCosineC.getText();
        theta = textCosineTheta.getText();
        
        //Prepares the values for calculation
        a = a.toUpperCase();
        a = a.trim();
        b = b.toUpperCase();
        b = b.trim();
        c = c.toUpperCase();
        c = c.trim();
        theta = theta.toUpperCase();
        theta = theta.trim();
        
        //Decides to solve for WHICH value
        if (a.equals("X") || b.equals("X")){
            //Nope. 
            JOptionPane.showMessageDialog(null, "Use sine law instead.");
        }
        else if (c.equals("X")){
            //c^2 = a^2 + b^2 - 2 a b cosC
            numA = Double.parseDouble(a);
            numB = Double.parseDouble(b);
            angleTheta = degToRad(Double.parseDouble(theta));
            
            numC = Math.sqrt((numA*numA + numB*numB) - (2*numA*numB*Math.cos(angleTheta)));
            textOutput.append("\nCOSINE LAW USED ... ");
            textOutput.append("\nc^2 = " + numA + "^2 + " + numB + "^2 - " + "2(" + numA + ")(" + numB + ")cos" + radToDeg(angleTheta));
            textOutput.append("\nc = " + numC);
        }
        else if (theta.equals("X")){
            //cosC = -(c^2 - a^2 - b^2)/2 a b
            numA = Double.parseDouble(a);
            numB = Double.parseDouble(b);
            numC = Double.parseDouble(c);
            
            angleTheta = Math.acos(-(numC*numC - numA*numA - numB*numB)/(2*numA*numB));
            angleTheta = radToDeg(angleTheta);
            textOutput.append("\nCOSINE LAW USED ... ");
            textOutput.append("\n" + numC + "^2 = " + numA + "^2 + " + numB + "^2 - " + "2(" + numA + ")(" + numB + ")cosC");
            textOutput.append("\nC = " + angleTheta);
        }
    }//GEN-LAST:event_btnCosineLawActionPerformed

    
    /**
     * Displays help for the American People
     * @param evt 
     */
    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
        JOptionPane.showMessageDialog(null, "Enter 'x' into whatever you need to solve for, and fill the rest with known values.", "Help for the American People!", JOptionPane.INFORMATION_MESSAGE);
        JOptionPane.showMessageDialog(null, "For the sake of simplicity, always enter angles in degrees", "Note", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnHelpActionPerformed

    private void btnSineLaw1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSineLaw1ActionPerformed
        // COSINE LAW!!!
        String strNumA, strNumB, strAngleA, strAngleB;
        double numA, numB, angleA, angleB;
        
        strNumA = textSinea.getText();
        strNumB = textSineb.getText();
        strAngleA = textSineA.getText();
        strAngleB = textSineB.getText();
        
        //Prepares the values for calculation
        strNumA = strNumA.toUpperCase();
        strNumA = strNumA.trim();
        strNumB = strNumB.toUpperCase();
        strNumB = strNumB.trim();
        strAngleA = strAngleA.toUpperCase();
        strAngleA = strAngleA.trim();
        strAngleB = strAngleB.toUpperCase();
        strAngleB = strAngleB.trim();
        
        //if solving for a
        if (strNumA.equals("X")){
            //Sine Law: a/sinA = b/sinB
            //a = sinA(b/sinB)
            numB = Double.parseDouble(strNumB);
            angleA = degToRad(Double.parseDouble(strAngleA));
            angleB = degToRad(Double.parseDouble(strAngleB));
            
            numA = Math.sin(angleA)*(numB/Math.sin(angleB));
            textOutput.append("\nSINE LAW USED ... ");
            textOutput.append("\na/sin(" + radToDeg(angleA) + ") = " + numB + "/sin(" + radToDeg(angleB) + ")");
            textOutput.append("\na = " + numA);
        }
        //if solving for b
        else if (strNumB.equals("X")){
            //Sine Law: a/sinA = b/sinB
            //b = sinB(a/sinA)
            numA = Double.parseDouble(strNumB);
            angleA = degToRad(Double.parseDouble(strAngleA));
            angleB = degToRad(Double.parseDouble(strAngleB));
            
            numB = Math.sin(angleB)*(numA/Math.sin(angleA));
            textOutput.append("\nSINE LAW USED ... ");
            textOutput.append("\nb/sin(" + radToDeg(angleB) + ") = " + numA + "/sin(" + radToDeg(angleA) + ")");
            textOutput.append("\nb = " + numB);
        }
        else if (strAngleA.equals("X")){
            //Sine law: sinA/a = sinB/b
            //A = asin( a(sinB/b) ) 
            numA = Double.parseDouble(strNumA);
            numB = Double.parseDouble(strNumB);
            angleB = degToRad(Double.parseDouble(strAngleB));
            
            angleA = Math.asin( numA*( Math.sin(angleB)/numB) );
            textOutput.append("\nSINE LAW USED ... ");
            textOutput.append("\nsinA/" + numA + " = sin" + radToDeg(angleB) + "/" + numB);
            textOutput.append("\nA = " + radToDeg(angleA));
        }
        else if (strAngleB.equals("X")){
            //Sine law: sinA/a = sinB/b
            //A = asin( a(sinB/b) ) 
            numA = Double.parseDouble(strNumA);
            numB = Double.parseDouble(strNumB);
            angleA = degToRad(Double.parseDouble(strAngleA));
            
            angleB = Math.asin( numB*( Math.sin(angleA)/numA) );
            textOutput.append("\nSINE LAW USED ... ");
            textOutput.append("\nsinB/" + numB + " = sin" + radToDeg(angleA) + "/" + numA);
            textOutput.append("\nA = " + radToDeg(angleB));
        }
        else {
             JOptionPane.showMessageDialog(null, "Something went wrong. Make sure to press the \"HOW DO I USE THIS SHIT\" button for help");
        }
    }//GEN-LAST:event_btnSineLaw1ActionPerformed

    private void btnCrossVectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrossVectorActionPerformed
        double numAX, numAY, numAZ, numBX, numBY, numBZ, numCX, numCY, numCZ;
        
        //Trims the user inputted value, then converts it into a double
        numAX = Double.parseDouble((textVAX.getText()).trim()); 
        numAY = Double.parseDouble((textVAY.getText()).trim()); 
        numAZ = Double.parseDouble((textVAZ.getText()).trim()); 
        numBX = Double.parseDouble((textVBX.getText()).trim()); 
        numBY = Double.parseDouble((textVBY.getText()).trim()); 
        numBZ = Double.parseDouble((textVBZ.getText()).trim()); 
        
        //Performs the calculation...
        //AY AZ AX AY
        //  x  x  x  
        //BY BZ BX BY
        // cross {x,y,z} = (AY)(BZ) - (BY)(AZ), (AZ)(BX) - (BZ)(AX), (AX)(BY) - (BX)(AY)
        numCX = numAX*numBZ - numBY*numAZ;
        numCY = numAZ*numBX - numBZ*numAX;
        numCZ = numAX*numBY - numBX*numAY;
        
        textOutput.append("\nCROSS MULTIPLICATION CALCULATION ... ");
        textOutput.append("\n(" + numAX + "," + numAY + "," + numAZ + ") x (" + numBX + "," + numBY + "," + numBZ + ") = (" + numCZ + "," + numCY + "," + numCZ + ")");
    }//GEN-LAST:event_btnCrossVectorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MakeMathGreatAgain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MakeMathGreatAgain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MakeMathGreatAgain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MakeMathGreatAgain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MakeMathGreatAgain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCosineLaw;
    private javax.swing.JButton btnCrossVector;
    private javax.swing.JButton btnHelp;
    private javax.swing.JButton btnSineLaw1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblComma;
    private javax.swing.JLabel lblComma1;
    private javax.swing.JLabel lblComma2;
    private javax.swing.JLabel lblComma3;
    private javax.swing.JLabel lblCosineLaw;
    private javax.swing.JLabel lblCosineLaw1;
    private javax.swing.JLabel lblCosineLawEquals;
    private javax.swing.JLabel lblCosineLawEquals1;
    private javax.swing.JLabel lblCosineLawEquals10;
    private javax.swing.JLabel lblCosineLawEquals2;
    private javax.swing.JLabel lblCosineLawEquals3;
    private javax.swing.JLabel lblCosineLawEquals4;
    private javax.swing.JLabel lblCosineLawEquals5;
    private javax.swing.JLabel lblCosineLawEquals6;
    private javax.swing.JLabel lblCosineLawEquals7;
    private javax.swing.JLabel lblCosineLawEquals9;
    private javax.swing.JLabel lblCrossMulti;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblSubTitle;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField textCosineA;
    private javax.swing.JTextField textCosineB;
    private javax.swing.JTextField textCosineC;
    private javax.swing.JTextField textCosineTheta;
    private javax.swing.JTextArea textOutput;
    private javax.swing.JTextField textSineA;
    private javax.swing.JTextField textSineB;
    private javax.swing.JTextField textSinea;
    private javax.swing.JTextField textSineb;
    private javax.swing.JTextField textVAX;
    private javax.swing.JTextField textVAY;
    private javax.swing.JTextField textVAZ;
    private javax.swing.JTextField textVBX;
    private javax.swing.JTextField textVBY;
    private javax.swing.JTextField textVBZ;
    // End of variables declaration//GEN-END:variables
}
